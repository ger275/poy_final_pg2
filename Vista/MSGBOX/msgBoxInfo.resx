<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="label1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAAIGNIUk0AAHomAACAhAAA+gAAAIDoAAB1
        MAAA6mAAADqYAAAXcJy6UTwAAAAJcEhZcwAACxAAAAsQAa0jvXUAAAAHdElNRQfoBB0AGDW1mEa3AAAD
        j0lEQVRYR82ZMYoVQRCGn6KhioksGGgiiIlX8AR7BVMN9gAewHDFK5h4jkUwEcRYMJBN1NzFbPX/prqm
        a5qenZ55jbyCX8buqr/+me6urqe7RTu5JdwucSQcC6fCmXAuXAiXCTwzxhw++BJT8Ih7L3MSI7wmPBVe
        C1+E38LfRuBLDLFwwJW5V9vJHRfleCS8FX4INQFrAAdccIYcytlkU3E3hefCV6GWzMGS/hJYVsAzYzVf
        B5xwkyPlWxI5FXdXeCP8EUpy9tk34Z3wQngmPBEeJvDMGHP44EtMyQM3OciV8s6JnIq7J7wXSkKSfBJe
        Cg+E60KMqwEffIkhtiaUXORMMTWRmZC3qYn7KbwSAlFAaTUfi4UDrpKfnPlLTiwTsB/45GXwZ4ElS37p
        a7dajDHABWeZh9x5T1owR30sJWzacs99EB4L7pMCk8XxGqJN5+CEO+YiNxo0n3TZXwZw7MvTylsmcTM1
        y2JvCPcF9hrgmbHkFCxyGXf5JdGQS1B6oHBSm6Ij+yQt64w4zOIR9FHwMsMzY8mpsGG5R5HkKPckWqyY
        D39YdY9FmJPGZvZ5I66ZzfPVEObxPDOWnCoWuS1XPN1oQdPoyBXkk4BykE/rVWY+6wVizm+5yBk1oGlw
        4hLnnvQJ3oSapblaPSrMEqxb4mj5dJMzfkU0HTFBpxEvfqq+vX1TgsGv/ZCU5nksjtyuA03HTNAO+SDg
        arIbosVygjpazHzJSe6o5ZQJerY4yP25lnweLZb9yR21nDEYNzcdSL4xWsx8ty8x5vksd+yCzhmMA7RJ
        dCIpssGMGEHbDomb8ZAbDa7ngsF4ciCnXUpRDWbEfLW4EjwzlpwazHjIHXkuewr8LjgPz90E9ljiXgKr
        SxwVbz0k+wn0fDOHpEeZ6SWwWmZ6FOoeAmcLdY+rbrtAz2P+1auuR7Owh8DlZgH0aLfWC3T+hXYLHHzD
        2tDyzyy3xa+76oZlXdfyg0P90YTzGHCAPzungQf4w90tBx/gP31g0zeEqCaSk0Y5oGax1+zGuRr44EsM
        sfG0OsgVXnzmQBYieRs+ebknAUmo+lxN3J8sGZ0I7RLgmTHm8MG3JgxucuQvNyvObSqS/cCmLU93CToQ
        2iQvMzzHrqQGOOHOe25RnNtUJODYU5tiMd8KOODKpWRAq7hoQ+BYgiicVHeuIO7J2GAsAV9iiIXDirBz
        72VZYMR/+m+I3e4ffjARJHljRR4AAAAASUVORK5CYII=
</value>
  </data>
</root>