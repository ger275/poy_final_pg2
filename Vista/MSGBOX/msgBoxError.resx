<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="label1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>